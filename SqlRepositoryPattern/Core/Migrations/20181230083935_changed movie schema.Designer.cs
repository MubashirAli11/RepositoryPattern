// <auto-generated />
using System;
using Core.DBContext;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Core.Migrations
{
    [DbContext(typeof(LifebookDbContext))]
    [Migration("20181230083935_changed movie schema")]
    partial class changedmovieschema
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.2.0-rtm-35687")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Core.Entities.Movie", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("BoxOfficeAmount")
                        .HasMaxLength(50);

                    b.Property<string>("Budget")
                        .HasMaxLength(50);

                    b.Property<string>("CreatedBy")
                        .HasMaxLength(200);

                    b.Property<DateTime>("CreatedOn");

                    b.Property<double>("IMDBRating");

                    b.Property<bool>("IsActive");

                    b.Property<bool>("IsDeleted");

                    b.Property<string>("LastModifiedBy")
                        .HasMaxLength(200);

                    b.Property<DateTime?>("LastModifiedOn");

                    b.Property<string>("Name")
                        .HasMaxLength(250);

                    b.Property<DateTime>("ReleaseDate");

                    b.HasKey("Id");

                    b.ToTable("Movies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BoxOfficeAmount = "2B",
                            Budget = "400M",
                            CreatedOn = new DateTime(2018, 12, 30, 8, 39, 34, 123, DateTimeKind.Utc).AddTicks(5947),
                            IMDBRating = 8.5,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Avengers: Infinity War",
                            ReleaseDate = new DateTime(2018, 4, 30, 8, 39, 34, 123, DateTimeKind.Utc).AddTicks(5933)
                        },
                        new
                        {
                            Id = 2,
                            BoxOfficeAmount = "389M",
                            Budget = "50M",
                            CreatedOn = new DateTime(2018, 12, 30, 8, 39, 34, 123, DateTimeKind.Utc).AddTicks(9152),
                            IMDBRating = 8.1999999999999993,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "The Wolf of Wall Street",
                            ReleaseDate = new DateTime(2013, 12, 30, 8, 39, 34, 123, DateTimeKind.Utc).AddTicks(9138)
                        },
                        new
                        {
                            Id = 3,
                            BoxOfficeAmount = "90M",
                            Budget = "20M",
                            CreatedOn = new DateTime(2018, 12, 30, 8, 39, 34, 123, DateTimeKind.Utc).AddTicks(9184),
                            IMDBRating = 7.2999999999999998,
                            IsActive = true,
                            IsDeleted = false,
                            Name = "Identity",
                            ReleaseDate = new DateTime(2003, 12, 30, 8, 39, 34, 123, DateTimeKind.Utc).AddTicks(9184)
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
